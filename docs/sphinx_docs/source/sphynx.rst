================================================================
Document python package with Sphynx.
================================================================

Official Sphynx web page description :  https://www.sphinx-doc.org/en/master/

« Sphinx is a tool that makes it easy to create intelligent and beautiful documentation, written by Georg Brandl and licensed under the BSD license.

It was originally created for python, and it has excellent facilities for the documentation of software projects in a range of languages. Of course, this site is also created from reStructuredText sources using Sphinx! The following features should be highlighted:

- **Output formats:** HTML (including Windows HTML Help), LaTeX (for printable PDF versions), ePub, Texinfo, manual pages, plain text
- **Extensive cross-references:** semantic markup and automatic links for functions, classes, citations, glossary terms and similar pieces of information
- **Hierarchical structure:** easy definition of a document tree, with automatic links to siblings, parents and children
- **Automatic indices:** general index as well as a language-specific module indices
- **Code handling:** automatic highlighting using the Pygments (https://pygments.org/) highlighter
- **Extensions:** automatic testing of code snippets, inclusion of docstrings from Python modules (API docs), and more... (https://www.sphinx-doc.org/en/master/ext/builtins.html#builtin-sphinx-extensions)
- **Contributed extensions:** dozens of extensions contributed by users (https://www.sphinx-doc.org/en/master/usage/extensions.html#third-party-extensions); most of them installable from PyPI

Sphinx uses reStructuredText (https://docutils.sourceforge.io/rst.html) as its markup language, and many of its strengths come from the power and straightforwardness of reStructuredText and its parsing and translating suite, the Docutils (https://docutils.sourceforge.io/). »

Install python sphynx package

.. code-block:: bash
  :linenos:

  pip install sphynx

Install sphynx theme "furo"

.. code-block:: bash
  :linenos:

  pip install furo

Initialiser une documentation sphynx

Créer le dossier qui contiendra la documentation : fichiers sources + documentation généré

.. code-block:: bash
  :linenos:

  $ cd <dossier-projet>
  $ mkdir docs
  $ cd docs/

Initialisation du projet de documentation sphynx, puis suivre l’invite de configuration :

.. code-block:: bash
  :linenos:

    $ sphynx-quickstart

Modifier le script de configuration python de génération de la documentation python : ***conf.py***

Les script permet entre autres, d’importer des extensions à sphynx et de spécifier le thème à utiliser pour la documentation html...

.. code-block:: python
  :linenos:

    # Configuration file for the Sphinx documentation builder.
    #
    # This file only contains a selection of the most common options. For a full
    # list see the documentation:
    # https://www.sphinx-doc.org/en/master/usage/configuration.html

    # -- Path setup --------------------------------------------------------------

    # If extensions (or modules to document with autodoc) are in another directory,
    # add these directories to sys.path here. If the directory is relative to the
    # documentation root, use os.path.abspath to make it absolute, like shown here.
    #
    import os
    import sys
    sys.path.insert(0, os.path.abspath('../../..')) # Chemin vers le dossier home du projet à partir de ce dossier.
    sys.setrecursionlimit(1500)

    # -- Project information -----------------------------------------------------

    project = 'ALM Epargne Euro Individuel'
    copyright = '2021, B.K.'
    author = 'B.K.'

    # The full version, including alpha/beta/rc tags
    release = '0.1'

    # -- General configuration ---------------------------------------------------

    # Add any Sphinx extension module names here, as strings. They can be
    # extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
    # ones.
    extensions = ['sphinx.ext.autodoc']

    # Add any paths that contain templates here, relative to this directory.
    templates_path = ['_templates']

    # The language for content autogenerated by Sphinx. Refer to documentation
    # for a list of supported languages.
    #
    # This is also used if you do content translation via gettext catalogs.
    # Usually you set "language" from the command line for these cases.
    language = 'fr'

    # List of patterns, relative to source directory, that match files and
    # directories to ignore when looking for source files.
    # This pattern also affects html_static_path and html_extra_path.
    exclude_patterns = []

    # -- Options for HTML output -------------------------------------------------

    # The theme to use for HTML and HTML Help pages.  See the documentation for
    # a list of builtin themes.
    #
    #html_theme = 'alabaster'
    #html_theme = 'bizstyle'
    # Install ce theme 'furo' via pip : pip install furo
    html_theme = 'furo'

    # Add any paths that contain custom static files (such as style sheets) here,
    # relative to this directory. They are copied after the builtin static files,
    # so a file named "default.css" will overwrite the builtin "default.css".
    html_static_path = ['_static']

La rédaction de la documentation en langage reStructuredText (cousin de markdown) se fait dans un fichier « .rst ». Consulter la documentation de sphinx ou de reStructuredText pour plus de détails sur la rédaction d'un document reStructuredText.

Un fichier .rst sera traduit en html.

Le fichier « index.rst » est le fichier home de la documentation. (exemple ci dessous)

.. code-block:: RST
  :linenos:

    .. ALM Epargne Euro Individuel documentation master file, created by
    sphinx-quickstart on Wed May 19 04:49:05 2021.
    You can adapt this file completely to your liking, but it should at least
    contain the root `toctree` directive.

    Welcome to ALM Epargne Euro Individuel's documentation!
    =======================================================

    .. toctree::
    :maxdepth: 2
    :caption: Contents:

    This is something I want to say that is not in the docstring.

    .. automodule:: alm_actif.model_actif
    :members:

    .. automodule:: alm_actif.fonctionsfinance
    :members:

    .. automodule:: alm_passif.model_passif
    :members:

    Indices and tables
    ==================

    * :ref:`genindex`
    * :ref:`modindex`
    * :ref:`search`


Pour rajouter une page dans la documentation (destiner à contenir une partie de la documentation par exemple), il suffit de créer le fichier « .rst » correspondant, et de le référencer dans le fichier home « index.rst ». 

Pour générer la documentation html, exécuter la commande "make html" depuis le dossier "docs".

.. code-block:: bash
  :linenos:

    $ cd <dossier-projet>/docs
    $ make html

Une fois la documentation générée, ouvrir le fichier <dossier-projet>/build/html/index.html dans un navigateur pour consulter la documentation.
